name: Release on Dockerhub

on:
  push:
    branches:
      - develop
    paths:
      - '.github/workflows/dockerhub-release.yml'
      - 'docker.vars*'

jobs:
  docker_release:
    runs-on: ubuntu-20.04
    timeout-minutes: 100

    steps:
      - uses: actions/checkout@v3

      - id: settings
        run:  |
          apt update --yes && apt install --yes jq
          DOCKER_VERSION=$(cat docker.vars.json | jq -r '.["docker-version"]')
          echo "::set-output name=docker_version::$DOCKER_VERSION"

          POSTGRES_VERSION=$(cat docker.vars.json | jq -r '.["postgres-version"]')
          echo "::set-output name=postgres_version::$POSTGRES_VERSION"

          PLATFORM=$(cat docker.vars.json | jq -r '.["platform"]')
          echo "::set-output name=platform::$PLATFORM"

      - id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            supabase/postgres
            public.ecr.aws/t3w2s2c9/postgres
          tags: |
            type=raw,value=${{ steps.settings.outputs.docker_version }}

      - uses: docker/setup-qemu-action@v2
        with:
          platforms: amd64,arm64

      - uses: docker/setup-buildx-action@v2

      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to ECR
        uses: docker/login-action@v2
        with:
          registry: public.ecr.aws
          username: ${{ secrets.PROD_ACCESS_KEY_ID }}
          password: ${{ secrets.PROD_SECRET_ACCESS_KEY }}

      - uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          platforms: linux/amd64
          build-args: |
            "VERSION=${{steps.settings.outputs.postgres_version}}"
          cache-from: type=gha
          cache-to: type=gha,mode=max
