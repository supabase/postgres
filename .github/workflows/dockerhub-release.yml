name: Release on Dockerhub

on:
  push:
    branches:
      - develop
    paths:
      - '.github/workflows/dockerhub-release.yml'
      - 'docker.vars*'

jobs:
  settings:
    runs-on: ubuntu-20.04
    outputs:
      docker_version: ${{ steps.settings.outputs.docker_version }}
      postgres_version: ${{ steps.settings.outputs.postgres_version }}
    steps:
      - uses: actions/checkout@v3

      - id: settings
        run: |
          apt update --yes && apt install --yes jq
          DOCKER_VERSION=$(cat docker.vars.json | jq -r '.["docker-version"]')
          echo "::set-output name=docker_version::$DOCKER_VERSION"

          POSTGRES_VERSION=$(cat docker.vars.json | jq -r '.["postgres-version"]')
          echo "::set-output name=postgres_version::$POSTGRES_VERSION"

  docker_x86_release:
    needs: settings
    runs-on: ubuntu-20.04
    timeout-minutes: 120
    env:
      arch: amd64
    outputs:
      image_digest: ${{ steps.build.outputs.digest }}
    steps:
      - id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            supabase/postgres
            public.ecr.aws/t3w2s2c9/postgres
          tags: |
            type=raw,value=${{ needs.settings.outputs.docker_version }}_${{ env.arch }}

      - uses: docker/setup-buildx-action@v2

      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to ECR
        uses: docker/login-action@v2
        with:
          registry: public.ecr.aws
          username: ${{ secrets.PROD_ACCESS_KEY_ID }}
          password: ${{ secrets.PROD_SECRET_ACCESS_KEY }}

      - id: build
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          platforms: linux/${{ env.arch }}
          build-args: |
            "VERSION=${{ needs.settings.outputs.postgres_version }}"
          cache-from: type=gha
          cache-to: type=gha,mode=max

  docker_arm_release:
    needs: settings
    runs-on: [arm-runner]
    timeout-minutes: 120
    env:
      arch: arm64
    outputs:
      image_digest: ${{ steps.build.outputs.digest }}
    steps:
      - uses: actions/checkout@v3

      - id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            supabase/postgres
            public.ecr.aws/t3w2s2c9/postgres
          tags: |
            type=raw,value=${{ needs.settings.outputs.docker_version }}_${{ env.arch }}

      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to ECR
        uses: docker/login-action@v2
        with:
          registry: public.ecr.aws
          username: ${{ secrets.PROD_ACCESS_KEY_ID }}
          password: ${{ secrets.PROD_SECRET_ACCESS_KEY }}

      - uses: docker/setup-buildx-action@v2
        with:
          driver: docker
          driver-opts: |
            image=moby/buildkit:master
            network=host

      - uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          platforms: linux/${{ env.arch }}
          build-args: |
            "VERSION=${{ needs.settings.outputs.postgres_version }}"
          no-cache: true

  merge_manifest:
    needs: [settings, docker_x86_release, docker_arm_release]
    runs-on: ubuntu-latest
    steps:
      - uses: docker/setup-buildx-action@v2

      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Merge multi-arch manifests
        run: |
          docker buildx imagetools create -t supabase/postgres:${{ needs.settings.outputs.docker_version }} \
          supabase/postgres@${{ needs.docker_x86_release.outputs.image_digest }} \
          supabase/postgres@${{ needs.docker_arm_release.outputs.image_digest }}

      - name: Login to ECR
        uses: docker/login-action@v2
        with:
          registry: public.ecr.aws
          username: ${{ secrets.PROD_ACCESS_KEY_ID }}
          password: ${{ secrets.PROD_SECRET_ACCESS_KEY }}

      - name: Mirror to ECR
        uses: akhilerm/tag-push-action@v2.0.0
        with:
          src: docker.io/supabase/postgres:${{ needs.settings.outputs.docker_version }}
          dst: public.ecr.aws/t3w2s2c9/postgres:${{ needs.settings.outputs.docker_version }}
